swagger: '2.0'
info:
    description: This is simple API for Help Desk application.
    version: 0.2.0
    title: Help Desk API
    license:
        name: MIT
        url: 'http://localhost:8080/LICENSE'
host: 'localhost:8080'
basePath: /api
tags:
    - name: Auth
    - name: Users
    - name: Cases
schemes:
    - http
    - https
paths:
    /auth:
        post:
            tags:
                - Auth
            summary: Sign up new user.
            description: Sign up new user. No privileges needed
            operationId: signUp
            produces:
                - application/json
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                      type: object
                      properties:
                          username:
                              type: string
                              example: joe.doe
                          firstName:
                              type: string
                              example: Joe
                          lastName:
                              type: string
                              example: Doe
                          email:
                              type: string
                              example: joe.doe@email.com
                          password:
                              type: string
                              example: Password1
                          repeatPassword:
                              type: string
                              example: Password1
                          power:
                              type: integer
                              format: int64
                              example: 1
            responses:
                '201':
                    description: Created
                    schema:
                        $ref: '#/definitions/Token'
                '400':
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                '409':
                    description: Conflict
                    schema:
                        $ref: '#/definitions/Error'
    /auth/login:
        post:
            tags:
                - Auth
            summary: Login user
            description: Exchange credentials for token.
            operationId: login
            produces:
                - application/json
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                      type: object
                      properties:
                          username:
                              type: string
                              example: joe.doe
                          password:
                              type: string
                              example: Password1
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/Token'
                '400':
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/Error'
    /users:
        get:
            tags:
                - Users
            summary: List users
            description: 'Returns array of users. This request needs authentication and elevated privileges (default: power 7 or above)'
            operationId: getMultipleUsers
            security:
                - api_key: []
            produces:
                - application/json
            parameters:
                - name: username
                  in: query
                  description: Username of user to return
                  type: string
                - name: email
                  in: query
                  description: Email of user to return
                  type: string
                - name: firstName
                  in: query
                  description: First name of user to return
                  type: string
                - name: lastName
                  in: query
                  description: Last name of user to return
                  type: string
            responses:
                '200':
                    description: Ok
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/User'
                '404':
                    description: Not found
                    schema:
                        $ref: '#/definitions/Error'
        post:
            tags:
                - Users
            summary: Create new user
            description: 'This request needs authentication and elevated privileges (default: power 5 or above).'
            operationId: createUser
            security:
                - api_key: []
            produces:
                - application/json
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                      type: object
                      properties:
                          username:
                              type: string
                              example: joe.doe
                          firstName:
                              type: string
                              example: Joe
                          lastName:
                              type: string
                              example: Doe
                          email:
                              type: string
                              example: joe.doe@email.com
                          password:
                              type: string
                              example: Password1
                          repeatPassword:
                              type: string
                              example: Password1
                          power:
                              type: integer
                              format: int64
                              example: 1
            responses:
                '201':
                    description: Created
                    schema:
                        $ref: '#/definitions/User'
                '400':
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                '409':
                    description: Conflict
                    schema:
                        $ref: '#/definitions/Error'
    '/users/{userId}':
        get:
            tags:
                - Users
            summary: Get user by id
            description: 'This request needs authentication and property userId have to be equal to current logged user ID or user with elevated privileges (default: power 5 or above)'
            parameters:
                - in: path
                  name: userId
                  description: ID of user to return
                  required: true
                  type: string
            operationId: getUserById
            security:
                - api_key: []
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/User'
                '404':
                    description: Not found
                    schema:
                        $ref: '#/definitions/Error'
        put:
            tags:
                - Users
            summary: Update user by id
            description: 'This request needs authentication and property userId have to be equal to current logged user ID or user with elevated privileges (default: power 5 or above)'
            parameters:
                - in: path
                  name: userId
                  description: ID of user to update
                  required: true
                  type: string
                - in: body
                  name: body
                  required: true
                  description: You can use single property instead of updating whole document.
                  schema:
                      type: object
                      properties:
                          username:
                              type: string
                              example: joe.doe
                          firstName:
                              type: string
                              example: Joe
                          lastName:
                              type: string
                              example: Doe
                          email:
                              type: string
                              example: joe.doe@email.com
                          password:
                              type: string
                              example: Password1
                          repeatPassword:
                              type: string
                              example: Password1
                          power:
                              type: integer
                              format: int64
                              example: 1
            operationId: updateUser
            security:
                - api_key: []
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/User'
                '400':
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                '404':
                    description: Not found
                    schema:
                        $ref: '#/definitions/Error'
                '409':
                    description: Conflict
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            tags:
                - Users
            summary: Delete user by id
            description: 'This request needs authentication and elevated privileges (default: power 7 or above).'
            parameters:
                - name: userId
                  in: path
                  description: ID of user to delete
                  required: true
                  type: string
            operationId: deleteUser
            security:
                - api_key: []
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/User'
                '404':
                    description: Not found
                    schema:
                        $ref: '#/definitions/Error'
    /cases:
        get:
            tags:
                - Cases
            summary: List cases
            description: 'Return array of cases. This request needs authentication and elevated privileges (default: power 5 or above).'
            parameters:
                - name: operator
                  in: query
                  description: Username of operator to retrun
                  type: string
                - name: status
                  in: query
                  description: Status of cases to return
                  type: string
            operationId: listCases
            security:
                - api_key: []
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Case'
                '404':
                    description: Not found
                    schema:
                        $ref: '#/definitions/Error'
        post:
            tags:
                - Cases
            summary: Create new case
            description: 'This request needs authentication.'
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                      type: object
                      properties:
                          title:
                              type: string
                              example: Proposing amendments
                          priority:
                              type: number
                              example: 2
                          course:
                              type: string
                              example: Lorem ipsum
                          assignedOperator:
                              type: string
                              example: joe.doe
            operationId: createNewCase
            security:
                - api_key: []
            produces:
                - application/json
            responses:
                '201':
                    description: Created
                    schema:
                        $ref: '#/definitions/Case'
                '400':
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
    '/cases/{caseId}':
        get:
            tags:
                - Cases
            summary: Get case by id
            description: 'This request needs authentication and current logged user have to be document owner or elevated privileges (default: power 5 or above)'
            parameters:
                - in: path
                  name: caseId
                  description: ID of case to return
                  required: true
                  type: string
            operationId: getCaseById
            security:
                - api_key: []
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/Case'
                '404':
                    description: Not found
                    schema:
                        $ref: '#/definitions/Error'
        put:
            tags:
                - Cases
            summary: Update case by id
            description: This can be executed by admin user.
            parameters:
                - in: path
                  name: caseId
                  description: ID of case to return
                  required: true
                  type: string
                - in: body
                  name: body
                  required: true
                  schema:
                      type: object
                      properties:
                          title:
                              type: string
                              example: Proposing amendments
                          priority:
                              type: number
                              example: 3
                          course:
                              type: string
                              example: Lorem ipsum
                          assignedOperator:
                              type: string
                              example: joe.doe
                          status:
                              type: string
                              example: Closed
            operationId: updateCaseById
            security:
                - api_key: []
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/Case'
                '400':
                    description: Bad request
                    schema:
                        $ref: '#/definitions/Error'
                '404':
                    description: Not found
                    schema:
                        $ref: '#/definitions/Error'
        delete:
            tags:
                - Cases
            summary: Delete case by id
            description: 'This request needs authentication and elevated privileges (default: power 7 or above).'
            parameters:
                - in: path
                  name: caseId
                  description: ID of case to delete
                  required: true
                  type: string
            operationId: deleteCaseById
            security:
                - api_key: []
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/Case'
                '404':
                    description: Not found
                    schema:
                        $ref: '#/definitions/Error'
    '/cases/{caseId}/curse':
        post:
            tags:
                - Cases
            summary: Add comment to existing case
            description: 'This request needs authentication and elevated privileges (default: power 7 or above).'
            parameters:
                - in: path
                  name: caseId
                  description: ID of case to return
                  required: true
                  type: string
                - in: body
                  name: body
                  required: true
                  schema:
                      type: object
                      properties:
                          message:
                              type: string
                              example: Add new functionality foo
            operationId: getCurse
            security:
                - api_key: []
            produces:
                - application/json
            responses:
                '201':
                    description: Created
                    schema:
                        $ref: '#/definitions/Curse'
                '404':
                    description: Not found
                    schema:
                        $ref: '#/definitions/Error'
securityDefinitions:
    api_key:
        type: apiKey
        name: Authorization
        in: header
definitions:
    Token:
        type: object
        properties:
            token:
                type: string
                example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'
    Error:
        type: object
        properties:
            code:
                type: integer
                format: int32
                example: 404
            message:
                type: string
                example: Data not found
            type:
                type: string
                example: client.notFound'
            context:
                type: string
                example: dataId
    User:
        type: object
        properties:
            _id:
                type: string
                example: 5f3bfd5d89770929a060e226
            username:
                type: string
                example: joe.doe
            firstName:
                type: string
                example: Joe
            lastName:
                type: string
                example: Doe
            email:
                type: string
                example: joe.doe@email.com
            power:
                type: integer
                example: 1
    Case:
        type: object
        properties:
            _id:
                type: string
                example: 5f3bfd5d89770929aaa0e226
            title:
                type: string
                example: Proposing amendments
            createdBy:
                $ref: '#/definitions/User'
            status:
                type: string
                enum: [Open, Closed, In progress]
                example: Open
            priority:
                type: number
                example: 1
            assignedOperator:
                $ref: '#/definitions/User'
            course:
                type: array
                items:
                    $ref: '#/definitions/Curse'
            createdAt:
                type: string
                description: ISO Date and time format in UTC
                example: '2020-09-01T08:00:00Z'
            updatedAt:
                type: string
                description: ISO Date and time format in UTC
                example: '2014-09-03T12:00:00Z'
    Curse:
        type: object
        properties:
            _id:
                type: string
                example: 5f3bfd5d89770929ab10e220
            createdBy:
                $ref: '#/definitions/User'
            message:
                type: string
                example: Add new functionality foo
            createdAt:
                type: string
                description: ISO Date and time format in UTC
                example: '2020-09-01T08:00:00Z'
            updatedAt:
                type: string
                description: ISO Date and time format in UTC
                example: '2014-09-03T12:00:00Z'
